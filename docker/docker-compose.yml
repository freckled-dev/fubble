version: '3'

services:
  signaling:
    build:
      context: ../../fubble_build/install
      dockerfile: ../../fubble/docker/signaling/Dockerfile
    restart: on-failure
  temporary_room:
    build:
      context: ../../fubble_build/install
      dockerfile: ../../fubble/docker/temporary_room/Dockerfile
    environment:
      - FUBBLE_MATRIX_USER=temporary_room_user
      - FUBBLE_MATRIX_PASSWORD=temporary_room_password
      - FUBBLE_MATRIX_DEVICE_ID=temporary_room_device_id
    depends_on:
      - synapse
    restart: on-failure
  version:
    build:
      context: ../../fubble_build/install
      dockerfile: ../../fubble/docker/version/Dockerfile
    restart: on-failure
  synapse:
    # https://github.com/matrix-org/synapse/blob/master/contrib/docker/docker-compose.yml
    build:
      context: synapse
    environment:
      - SYNAPSE_SERVER_NAME=fubble.io
      - SYNAPSE_REPORT_STATS=no
    volumes:
      - synapse_data:/data
    depends_on:
      - synapse_database
    restart: on-failure
  synapse_database:
    image: docker.io/postgres:13
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - synapse_database_data:/var/lib/postgresql/data
    restart: on-failure
  proxy:
    build:
      context: proxy
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - synapse
      - temporary_room
      - signaling
    ports:
      - "80:80"
    restart: on-failure
  coturn:
    build:
      context: coturn
    network_mode: host # docker network sucks, when it comes to wide port ranges. so use host
    volumes:
      - coturn_data:/var/lib/coturn
    restart: on-failure
    # not needed when `network_mode: host`
    #ports:
    #  - "3478:3478"
    #  - "49152-65535:49152-65535/udp"

volumes:
  synapse_data:
  synapse_database_data:
  coturn_data:

